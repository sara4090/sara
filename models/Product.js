const mongoose = require("mongoose");
const { Schema } = mongoose;

const offersSchema = new Schema({
  label: {type: String},
  values: {type: String},
});

const productSchema = new Schema({
  name: {type: String, required: true},
  title: {type: String, required: true},
  category: {type: String, required: true},
  subCategory: {type: String, required: true},
  images: [
    {
      public_id: {
        type: String,
        required: true,
      },
      url: {
        type: String,
        required: true,
      },
    },
  ],


  description: {type: String, required: true},
  basicInfo: {type: String},
  price: {type: String},
  packege: { type: String, required: true},
  mfr: {type: String, required: true},
  mfrNo: {type: String, required: true},
  partNumber: {type: String, required: true},
  inventory: {type: String},
  brand: {type: String},
  ram: {type: String},
  storage: {type: String},
  compatible: {type: String},
  material: {type: String},
  type: {type: String},
  factoryLead: {type: String},
  lifeCycle: {type: String},
  contactPlating: {type: String},
  housingMaterial: {type: String},
  processor: {type: String},
  capacity: {type: String},
  pinsNo: {type: String},
  ramProcessor: {type: String},
  operatingSystem: {type: String},
  memory: {type: String},
  memoryTechnology: {type: String},
  size: {type: String},
  antenna: {type: String},
  frequencyBand: {type: String},
  cells: {type: String},
  cores: {type: String},
  designedFor: {type: String},
  wiredWireless: {type: String},
  CPC: {type: String},
  connectivity: {type: String},
  refillingType: {type: String},
  panelType: {type: String},
  screenForm_factor: {type: String},
  chipSet: {type: String},
  displayTechnology: {type: String},
  colorType: {type: String},
  color: {type: String},
  hsnCode: {type: String},
  sku: {type: String},
  stock: {type: String},
  priceBefore: {type: String},
  maxOrderQty: {type: String},
  minOrderQty: {type: String},
  primaryProducts: {type: String},
  primePartner: {type: String},
  length: {type: String},
  breadth: {type: String},
  imageTitle: {type: String},
  height: {type: String},
  weight: {type: String},
  RadiationHardening: {type: String},
  PbfreeCode: {type: String},
  IECConformance: {type: String},
  FilterFeature: {type: String},
  MixedContacts: {type: String},
  Option: {type: String},
  TotalNumberOfContacts: {type: String},
  Orientation: {type: String},
  Depth: {type: String},
  ReachComplianceCode: {type: String},
  CurrentRating: {type: String},
  Frequency: {type: String},
  ApprovalAgency: {type: String},
  LeadPitch: {type: String},
  NumberOfContacts: {type: String},
  MatingInformation: {type: String},
  ContactGender: {type: String},
  EmptyShell: {type: String},
  OperatingSupplyVoltage: {type: String},
  BackshellType: {type: String},
  BodyOrShellStyle: {type: String},
  Interface: {type: String},
  ELV: {type: String},
  MaxSupplyVoltage: {type: String},
  MinSupplyVoltage: {type: String},
  CouplingType: {type: String},
  NumberOfPorts: {type: String},
  AccessoryType: {type: String},
  NumberOfPoles: {type: String},
  Sealable: {type: String},
  Density: {type: String},
  NumberOfDrivers: {type: String},
  OutsideDiameter: {type: String},
  NumberOfReceivers: {type: String},
  HeadDiameter: {type: String},

  offers: [offersSchema],
});

const Product = mongoose.model("product", productSchema);

module.exports = Product;
